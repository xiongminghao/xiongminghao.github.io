<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小熊の窝</title>
  
  
  <link href="https://nanxiaoxiong.com/atom.xml" rel="self"/>
  
  <link href="https://nanxiaoxiong.com/"/>
  <updated>2021-08-04T15:08:29.375Z</updated>
  <id>https://nanxiaoxiong.com/</id>
  
  <author>
    <name>MingHao Xiong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DFS</title>
    <link href="https://nanxiaoxiong.com/2021/08/04/blog2/"/>
    <id>https://nanxiaoxiong.com/2021/08/04/blog2/</id>
    <published>2021-08-04T14:35:51.000Z</published>
    <updated>2021-08-04T15:08:29.375Z</updated>
    
    <content type="html"><![CDATA[<p>深度优先搜索（DFS）模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DFS(a,x,y)&#123;</span><br><span class="line">if(终止条件)</span><br><span class="line">&#123;</span><br><span class="line">//什么都不做（也许）</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">DFS(a,x+1,y);</span><br><span class="line">...</span><br><span class="line">return 结果;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了防止反复横跳（左访问右，之后右又访问左），访问过的地方要变更一下值并设置在终止条件里。</p><p>变更后的值不用恢复，因为变了就代表访问过了，根据DFS定义，后面的点根本访问不到这个点，不会影响结果。</p><p>一般都是先给一个初始值，对这个初始值进行递归，假设对一个二维数组中某个点开始DFS，并计算递归次数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">int result=DFS(a,i,j);//数组为a，后面i,j代表下标</span><br><span class="line">DFS(int[][] a,int i,int j)//数组为a，后面x,y代表下标</span><br><span class="line">if(i&lt;0||j&lt;0||i&gt;=a.length||j&gt;=a[0].length||a[i][j]!=4396)//终止条件，其中i,j可以取到0</span><br><span class="line">&#123;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    int count=1;</span><br><span class="line">    a[i][j]=4396;</span><br><span class="line">    count+=DFS(a,i+1,j);//一直向上递归</span><br><span class="line">    //count+=DFS(a,i-1,j);一直向下递归</span><br><span class="line">    //count+=DFS(a,i,j+1);一直向右递归</span><br><span class="line">    //count+=DFS(a,i,j-1);一直向左递归</span><br><span class="line">    //...</span><br><span class="line">    return count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于二叉树,99%是对自身左叶子节点和右叶子结点递归，终止条件：自身是否为null</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;深度优先搜索（DFS）模板&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>深度学习环境配置</title>
    <link href="https://nanxiaoxiong.com/2021/05/18/blog1/"/>
    <id>https://nanxiaoxiong.com/2021/05/18/blog1/</id>
    <published>2021-05-18T15:07:01.000Z</published>
    <updated>2021-05-20T14:48:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>github上的代码版本太多,tensorflow1,tensorflow2,pytorch<br>于是决定同时在电脑上安装这三个<br>使用anaconda3:<br>注意：anaconda安装路径不能带有中文，win10用户名文件夹不能为中文，否则后面安装各种包可能会有error<br>找到版本对应的CUDA与cudnn<br>如果显卡很好的话CUDA要装10以上<br>安装版本:<br>pytorch 1.2.0<br>tensorflow-gpu 1.13.2<br>tensorflow-gpu 2.2.0<br>需要CUDA10.0+CUDA10.1两个版本，是可以共存的，安装路径不能相同<br>具体参考：<br><a href="https://blog.csdn.net/weixin_44791964/article/details/104702142">https://blog.csdn.net/weixin_44791964/article/details/104702142</a><br><a href="https://blog.csdn.net/weixin_44791964/article/details/106037141">https://blog.csdn.net/weixin_44791964/article/details/106037141</a><br><a href="https://blog.csdn.net/weixin_44791964/article/details/109161493?spm=1001.2014.3001.5501">https://blog.csdn.net/weixin_44791964/article/details/109161493?spm=1001.2014.3001.5501</a><br>conda建好三个环境就可以开始学习了，还要测试是否用了gpu而不是cpu<br>在pytorch环境中测试：<br>torch.cuda.is_available()<br>在tensorflow1和2环境中测试：<br>tensorflow.gpu.is_available()<br>都返回Ture就没问题了<br>还需要在对应环境中下载pillow（PIL）等包，运行时根据错误提示缺什么下什么即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;github上的代码版本太多,tensorflow1,tensorflow2,pytorch&lt;br&gt;于是决定同时在电脑上安装这三个&lt;br&gt;使用anaconda3:&lt;br&gt;注意：anaconda安装路径不能带有中文，win10用户名文件夹不能为中文，否则后面安装各种包可能会有</summary>
      
    
    
    
    
  </entry>
  
</feed>
